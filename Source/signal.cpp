
#include "signal.hpp"

#include "stacktrace.hpp"
#include <stdio.h>

namespace sisu
{

namespace detail
{

void DefaultSignalHandler::trace( char const * const xSignalName, bool xBlock )
{
	std::cout << "===================================================================================================" << std::endl;
	std::cout << "===================================================================================================" << std::endl;
	std::cout << "===================================================================================================" << std::endl;
	std::cout << "===================================================================================================" << std::endl;

	if ( xBlock )
	{
		std::cout << "===================================================================================================" << std::endl;
		std::cout << "===================================================================================================" << std::endl;
		std::cout << "===================================================================================================" << std::endl;
		std::cout << "=================== You caught " << xSignalName << ". ┌∩┐(◣_◢)┌∩┐ That shit's terminal. ===========" << std::endl;
		std::cout << "===================================================================================================" << std::endl;
		std::cout << "===================================================================================================" << std::endl;
	}
	else
	{
		std::cout << "===================================================================================================" << std::endl;
		std::cout << "===================================================================================================" << std::endl;
		std::cout << "===== !!!!!ABANDON SHIP!!!!!  (╯°□°）╯︵ ┻━┻  ABORT!!! ABORT!!! ===================================" << std::endl;
		std::cout << "===================================================================================================" << std::endl;
		std::cout << "===================================================================================================" << std::endl;
	}

	printstack<10>( );

	if ( xBlock ) { static_cast<void>(getchar()); }

	std::cout << "===================================================================================================" << std::endl;
	std::cout << "===================================================================================================" << std::endl;
	std::cout << "===================================================================================================" << std::endl;
	std::cout << "==================================ONLY LOSERS DO DRUGS=============================================" << std::endl;
	std::cout << "=======================================GAME OVER===================================================" << std::endl;
	std::cout << "===================================================================================================" << std::endl;
	std::cout << "===================================================================================================" << std::endl;
}

void DefaultSignalHandler::onAbort( int xParam ) { trace( __FUNCTION__ ); exit( -1 ); }

void DefaultSignalHandler::onFloatingPointException( int xParam ) { trace( __FUNCTION__); exit( -1 ); }

void DefaultSignalHandler::onIllegalInstruction( int xParam ) { trace( __FUNCTION__ ); exit( -1 ); }

void DefaultSignalHandler::onInterrupt( int xParam ) { trace( __FUNCTION__, false ); exit( 0 ); }

void DefaultSignalHandler::onSegmentationViolation( int xParam ) { trace( __FUNCTION__ ); exit( -1 ); }

void DefaultSignalHandler::onTerminate( int xParam ) { trace( __FUNCTION__ ); exit( -1 ); }


} // namespace detail

} // namespace sisu
